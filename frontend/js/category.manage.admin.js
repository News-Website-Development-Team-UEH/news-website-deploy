console.log("üìÇ category.manage.admin.js loaded");

document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("token");
  // const API = window.API_BASE || "https://news-website-backend-05b8.onrender.com";
  const tableBody = document.getElementById("categoryTableBody");
  const addBtn = document.getElementById("addCategoryBtn");

  if (!token || !tableBody) return;

  /* --- L·∫•y danh m·ª•c --- */
  async function loadCategories() {
    tableBody.innerHTML = `<tr><td colspan="4" class="text-center">ƒêang t·∫£i...</td></tr>`;
    try {
      const res = await fetch(`${API}/admin/categories`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i danh m·ª•c");
      const json = await res.json();
      const categories = json.data || json;

      if (!categories.length) {
        tableBody.innerHTML = `<tr><td colspan="4" class="text-center text-muted">Kh√¥ng c√≥ danh m·ª•c n√†o</td></tr>`;
        return;
      }

      tableBody.innerHTML = "";
      categories.forEach(cat => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td>${cat.id}</td>
          <td>${cat.name}</td>
          <td>${cat.slug}</td>
          <td>
            <button class="btn btn-sm btn-outline-warning edit-btn" data-id="${cat.id}" data-name="${cat.name}">
              <i class="fa-solid fa-pen"></i> S·ª≠a
            </button>
          </td>
        `;
        tableBody.appendChild(row);
      });

      attachEditEvents();
    } catch (err) {
      console.error("Load categories error:", err);
      tableBody.innerHTML = `<tr><td colspan="4" class="text-danger text-center">L·ªói khi t·∫£i danh m·ª•c.</td></tr>`;
    }
  }

  /* --- T·∫°o danh m·ª•c --- */
  async function createCategory(name) {
    const slug = name.trim().toLowerCase().replace(/\s+/g, "-");
    try {
      const res = await fetch(`${API}/admin/categories`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({ name, slug }),
      });
      if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫°o danh m·ª•c m·ªõi");
      alert("‚úÖ T·∫°o danh m·ª•c th√†nh c√¥ng!");
      loadCategories();
    } catch (err) {
      console.error("Create category error:", err);
      alert("‚ùå L·ªói khi t·∫°o danh m·ª•c m·ªõi");
    }
  }

  /* --- C·∫≠p nh·∫≠t danh m·ª•c --- */
  async function updateCategory(id, newName) {
    try {
      const res = await fetch(`${API}/admin/categories/${id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({ name: newName }),
      });
      if (!res.ok) throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t danh m·ª•c");
      alert("‚úÖ C·∫≠p nh·∫≠t danh m·ª•c th√†nh c√¥ng!");
      loadCategories();
    } catch (err) {
      console.error("Update category error:", err);
      alert("‚ùå L·ªói khi c·∫≠p nh·∫≠t danh m·ª•c");
    }
  }

  /* --- G·∫Øn s·ª± ki·ªán S·ª≠a --- */
  function attachEditEvents() {
    document.querySelectorAll(".edit-btn").forEach(btn => {
      btn.addEventListener("click", () => {
        const id = btn.dataset.id;
        const oldName = btn.dataset.name;
        const newName = prompt("Nh·∫≠p t√™n danh m·ª•c m·ªõi:", oldName);
        if (newName && newName.trim() && newName !== oldName) {
          updateCategory(id, newName.trim());
        }
      });
    });
  }

  /* --- G·∫Øn s·ª± ki·ªán Th√™m --- */
  addBtn.addEventListener("click", () => {
    const name = prompt("Nh·∫≠p t√™n danh m·ª•c m·ªõi:");
    if (name && name.trim()) {
      createCategory(name.trim());
    }
  });

  loadCategories();
});
